{"version":3,"sources":["components/Dashboard/Modal/index.js","components/Dashboard/index.js","components/FilterButton.js","components/Form.js","components/tabs/Tabs/index.js","components/tabs/index.js","components/Todo.js","components/InfiniteScrolling/index.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","handleClose","show","children","showHideClassName","console","log","className","type","onClick","Dasboard","useState","setShow","FilterButton","props","aria-pressed","setFilter","name","Form","setName","onSubmit","e","preventDefault","appAddTask","htmlFor","input","id","placeholder","autoComplete","onChange","target","value","Tab","activeTab","label","Tabs","setActiveTab","onClickTabItem","tab","map","item","index","child","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","InfiniteUsers","loadUsers","setState","isLoading","request","get","then","results","nextUsers","body","user","email","Object","values","join","photo","picture","medium","username","login","uuid","hasMore","state","users","length","catch","err","error","message","window","onscroll","debounce","innerHeight","document","documentElement","scrollTop","offsetHeight","this","style","display","alt","src","borderRadius","height","marginRight","width","marginTop","color","Component","FILTER_NAMES","keys","ALL","Active","task","Completed","App","tasks","setTasks","to","path","About","addTask","newTask","nanoid","alert","updatedTasks","remainingTasks","filter","taskList","tasksNoun","headingText","filterList","isPressed","aria-labelledby","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.93ae2b18.chunk.js","sourcesContent":["import React from 'react'\nimport './styles.css'\n\nconst Modal = ({ handleClose, show, children }) => {\n    const showHideClassName = show ? \"modal display-block\" : \"modal display-none\"\n    console.log({children})\n    return(\n        <div className={showHideClassName}>\n            <section className=\"modal-main\">\n                {children}\n                <button type=\"button\" onClick={handleClose}>\n                    Close\n                </button>\n            </section>\n        </div>\n    )\n}\n\nexport default Modal","import React, { useState } from 'react'\nimport Modal from './Modal'\nexport default function Dasboard() {\n\n    const [show, setShow]  = useState(false)\n    \n    const showModal = () => {\n        setShow(true)\n    }\n\n    const hideModal = () => {\n        setShow(false)\n    }\n\n    return (\n        <div>\n            <main>\n                <h1>Modal</h1>\n                <Modal show={show} handleClose={hideModal}>\n                    <p>Modal</p>\n                </Modal>\n                <button type=\"button\" onClick={showModal}>\n                    Open\n                </button>\n            </main>\n        </div>\n    )\n}","import React from 'react'\n\nfunction FilterButton(props) {\n    return (\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed={\"true\"} onClick={props.setFilter(props.name)}>\n        <span className=\"visually-hidden\">Show</span>\n        <span>{props.name}</span>\n        <span className=\"visually-hidden\">tasks</span>\n      </button>\n    )\n}\n\nexport default FilterButton;","import React, {useState} from 'react'\n\n\n\nfunction Form(props) {\n    const [name, setName] = useState('');\n    \n    function handleSubmit(e) {\n      e.preventDefault()\n      if(name)\n      {\n        props.appAddTask(name)\n        setName(\"\")\n        console.log(\"inside form\")\n      }\n    }\n    \n    function handleChange(e) {\n      console.log(\"Typing!\")\n      console.log(e.target.value)\n      setName(e.target.value)\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n          <h2 className=\"label-wrapper\">\n            <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n              What needs to be done?\n            </label>\n          </h2>\n          <input\n            input=\"text\"\n            id=\"new-todo-input\"\n            className=\"input input__lg\"\n            name={name}\n            placeholder={name}\n            // value={name}\n            autoComplete=\"off\"\n            onChange={handleChange} />\n          <button type=\"submit\" className=\"btn btn__primary btn_lg\">\n            Add\n          </button>\n      </form>\n    )\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Tab(props) {\n    let { activeTab, label, onClick } = {...props} \n    let className = \"tab-list-item\"\n    \n    if (activeTab === label) {\n        className += \" tab-list-active\"\n    }\n\n    onClick = () => {\n        const { label, onClick } = {...props}\n        onClick(label)\n    }\n\n    return(\n        <li\n            className={className}\n            onClick={onClick}>\n                {label}\n        </li>\n    )\n\n\n}\n\nexport default Tab;","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\nimport Tab from './Tabs'\nimport { act } from 'react-dom/test-utils'\nimport './style.css'\n\nconst Tabs = (props) => {\n    \n    const { children } = {...props}\n    console.log({props}, {children})\n    const [activeTab, setActiveTab] = useState(children[0].props.label)\n\n    const onClickTabItem = (tab) => {\n        console.log({tab})\n        setActiveTab(tab)\n    }\n    \n    return (\n   \n            <div className=\"tabs\">\n                <ol className=\"tab-list\">\n                    {children.map((item, index) => {\n                        const { label } = item.props\n                        return (\n                            <Tab\n                                activeTab={activeTab}\n                                key={label}\n                                label={label}\n                                onClick={onClickTabItem}\n                             />\n                        )\n                    })}\n                </ol>\n                <div className=\"tab-component\">\n                    {\n                        children.map((child) => {\n                            if (child.props.label !== activeTab) return undefined;\n                            return child.props.children;\n                        })\n                    }\n                </div>\n            </div>\n     \n    )\n}\nexport default Tabs;\n\n\n\n","import React, { useState } from \"react\";\n\nexport default function Todo(props) {\n\n    const [isEditing, setEditing] = useState(false)\n    const [newName, setNewName] = useState('');\n\n    function handleChange(e) {\n      setNewName(e.target.value);\n    }\n\n    function handleSubmit(e) {\n      e.preventDefault()\n      props.editTask(props.id, newName)\n      setNewName(\"\")\n      setEditing(false)\n    }\n\n    const editingTemplate = (\n      <form className=\"stack-small\" onSubmit={handleSubmit}>\n        <div className=\"form-group\">\n          <label className=\"todo-label\" htmlFor={props.id}>\n            New name for {props.name}\n          </label>\n          <input id={props.id} className=\"todo-text\" type=\"text\"  value={newName} onChange={handleChange}/>\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\n            Cancel\n            <span className=\"visually-hidden\">renaming {props.name}</span>\n          </button>\n          <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n            Save\n            <span className=\"visually-hidden\">new name for {props.name}</span>\n          </button>\n        </div>\n      </form>\n    );\n\n    const viewTemplate = (\n      <div className=\"stack-small\">\n        <div className=\"c-cb\">\n            <input\n              id={props.id}\n              type=\"checkbox\"\n              defaultChecked={props.completed}\n              onChange={() => props.toggleTaskCompleted(props.id)}\n            />\n            <label className=\"todo-label\" htmlFor={props.id}>\n              {props.name}\n            </label>\n          </div>\n          <div className=\"btn-group\">\n            <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n              Edit <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn__danger\"\n              onClick={() => props.deleteTask(props.id)}\n            >\n              Delete <span className=\"visually-hidden\">{props.name}</span>\n            </button>\n          </div>\n      </div>\n    );\n\n    return (\n      <li className=\"todo stack-small\">\n        {isEditing ? editingTemplate : viewTemplate}\n      </li>\n    );\n}","import React, { Component, Fragment } from \"react\";\nimport { render } from \"react-dom\";\nimport request from \"superagent\";\nimport debounce from \"lodash.debounce\";\n\nclass InfiniteUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    // Sets up our initial state\n    this.state = {\n      error: false,\n      hasMore: true,\n      isLoading: false,\n      users: [],\n    };\n\n    // Binds our scroll event handler\n    window.onscroll = debounce(() => {\n      const {\n        loadUsers,\n        state: {\n          error,\n          isLoading,\n          hasMore,\n        },\n      } = this;\n\n      // Bails early if:\n      // * there's an error\n      // * it's already loading\n      // * there's nothing left to load\n      if (error || isLoading || !hasMore) return;\n\n      // Checks that the page has scrolled to the bottom\n      if (\n        window.innerHeight + document.documentElement.scrollTop\n        === document.documentElement.offsetHeight\n      ) {\n        loadUsers();\n      }\n    }, 100);\n  }\n\n  componentWillMount() {\n    // Loads some users on initial load\n    this.loadUsers();\n  }\n\n  loadUsers = () => {\n    this.setState({ isLoading: true }, () => {\n      request\n        .get('https://randomuser.me/api/?results=10')\n        .then((results) => {\n          // Creates a massaged array of user data\n          const nextUsers = results.body.results.map(user => ({\n            email: user.email,\n            name: Object.values(user.name).join(' '),\n            photo: user.picture.medium,\n            username: user.login.username,\n            uuid: user.login.uuid,\n          }));\n\n          // Merges the next users into our existing users\n          this.setState({\n            // Note: Depending on the API you're using, this value may\n            // be returned as part of the payload to indicate that there\n            // is no additional data to be loaded\n            hasMore: (this.state.users.length < 100),\n            isLoading: false,\n            users: [\n              ...this.state.users,\n              ...nextUsers,\n            ],\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            error: err.message,\n            isLoading: false,\n           });\n        })\n    });\n  }\n\n  render() {\n    const {\n      error,\n      hasMore,\n      isLoading,\n      users,\n    } = this.state;\n\n    return (\n      <div>\n        <h1>Infinite Users!</h1>\n        <p>Scroll down to load more!!</p>\n        {users.map(user => (\n          <Fragment key={user.username}>\n            <hr />\n            <div style={{ display: 'flex' }}>\n              <img\n                alt={user.username}\n                src={user.photo}\n                style={{\n                  borderRadius: '50%',\n                  height: 72,\n                  marginRight: 20,\n                  width: 72,\n                }}\n              />\n              <div>\n                <h2 style={{ marginTop: 0 }}>\n                  @{user.username}\n                </h2>\n                <p>Name: {user.name}</p>\n                <p>Email: {user.email}</p>\n              </div>\n            </div>\n          </Fragment>\n        ))}\n        <hr />\n        {error &&\n          <div style={{ color: '#900' }}>\n            {error}\n          </div>\n        }\n        {isLoading &&\n          <div>Loading...</div>\n        }\n        {!hasMore &&\n          <div>You did it! You reached the end!</div>\n        }\n      </div>\n    );\n  }\n}\n\n// const container = document.createElement(\"div\");\n// document.body.appendChild(container);\n// render(<InfiniteUsers />, container);\n\nexport default InfiniteUsers;","import { nanoid } from 'nanoid';\nimport React, { useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link, Route, Switch\n} from \"react-router-dom\";\nimport Dasboard from './components/Dashboard';\nimport FilterButton from './components/FilterButton';\nimport Form from './components/Form';\nimport Tabs from './components/tabs';\nimport Todo from './components/Todo';\nimport InfiniteUsers from './components/InfiniteScrolling'\n\n\nconst FILTER_MAP = {\n  ALL: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n}\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP)\n\nexport default function App(props) {\n  \n  const [tasks, setTasks] = useState(props.tasks);\n  \n  function addTask(name){\n    const newTask = { id: \"task-\" + nanoid(), name: name, completed: false };\n    alert(name + \" inside addTask\")\n    setTasks([...tasks, newTask])\n  }\n\n  function toggleTaskCompleted(id) {\n    // console.log(tasks[0])\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return {...task, completed: !task.completed}\n      }\n      return task\n    })\n    setTasks(updatedTasks)\n  }\n\n  function deleteTask(id){\n    console.log(id)\n    const remainingTasks = tasks.filter((task) => id !== task.id)\n    setTasks(remainingTasks)\n  }\n\n  function editTask(id, newName) {\n    const updatedTasks = tasks.map((task) => {\n      if (id === task.id) {\n        return {...task, name: newName}\n      }\n      return task\n    })\n    setTasks(updatedTasks)\n\n  }\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/play\">Tabs</Link>\n            </li>\n            <li>\n              <Link to=\"/play/TodoList\">TodoMatic</Link>\n            </li>\n            <li>\n              <Link to=\"/play/modal\">Modal</Link>\n            </li>\n            <li>\n              <Link to=\"/play/users\"></Link>\n            </li>\n            <li>\n              <Link to=\"/play/scrolling\">Infite Scrolling</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/TodoList\">\n            <About task={tasks} addTask={addTask} toggleTaskCompleted={toggleTaskCompleted} deleteTask={deleteTask} editTask={editTask}/>\n          </Route>\n          <Route path=\"/modal\">\n            <Dasboard />\n          </Route>\n          <Route path=\"/scrolling\">\n            <InfiniteUsers />\n          </Route>\n          <Route path=\"/\">\n          <div>\n          <h1>Tabs Demo</h1>\n            <Tabs> \n              <div label=\"Gator\"> \n                See ya later, <em>Alligator</em>! \n              </div> \n              <div label=\"Croc\"> \n                After 'while, <em>Crocodile</em>! \n              </div> \n              <div label=\"Sarcosuchus\"> \n                Nothing to see here, this tab is <em>extinct</em>! \n              </div> \n            </Tabs> \n          </div>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About(props) {\n\n  const [filter, setFilter] = useState(\"All\");\n\n  const taskList = props.task.map((task) => \n    <Todo \n      id={task.id} \n      name={task.name} \n      completed={task.completed} \n      key={task.id} \n      toggleTaskCompleted={props.toggleTaskCompleted}\n      deleteTask={props.deleteTask}\n      editTask={props.editTask}\n      />\n  )\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task'\n  const headingText = `${taskList.length} ${tasksNoun} remaining`\n\n  // const filterList = FILTER_MAP.map( name => (\n  //   <FilterButton key={name} name={name} />\n  // ))\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton \n      key={name} \n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter} />\n  ));\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form appAddTask={props.addTask} />\n    \n      <div className=\"filters btn-group stack-exception\">\n       {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        // role=\"list\"\n        className=\"todo-list stack-large stack-exchange\"\n        aria-labelledby=\"list-heading\" >\n            {taskList}\n        </ul>\n    </div>\n    \n  );\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", completed: true, name: \"Eat\"},\n  { id: \"todo-1\", completed: false, name: \"Sleep\"},\n  { id: \"todo-2\", completed: false, name: \"Repeat\"},\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}