{"version":3,"sources":["components/Todo.js","components/Form.js","components/FilterButton.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","id","type","defaultChecked","completed","htmlFor","name","Form","input","autoComplete","FilterButton","aria-pressed","App","to","path","About","task","tasks","taskList","map","aria-labelledby","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAEe,SAASA,EAAKC,GACzB,OACE,qBAAIC,UAAU,mBAAd,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOC,GAAIF,EAAME,GAAIC,KAAK,WAAWC,eAAgBJ,EAAMK,YAC3D,uBAAOJ,UAAU,aAAaK,QAASN,EAAME,GAA7C,SACGF,EAAMO,UAGX,sBAAKN,UAAU,YAAf,UACE,yBAAQE,KAAK,SAASF,UAAU,MAAhC,kBACO,sBAAMA,UAAU,kBAAhB,SAAmCD,EAAMO,UAEhD,yBAAQJ,KAAK,SAASF,UAAU,kBAAhC,oBACS,sBAAMA,UAAU,kBAAhB,SAAmCD,EAAMO,gBCO7CC,MArBf,SAAcR,GACV,OACI,iCACA,oBAAIC,UAAU,gBAAd,SACE,uBAAOK,QAAQ,iBAAiBL,UAAU,YAA1C,sCAIF,uBACEQ,MAAM,OACNP,GAAG,iBACHD,UAAU,kBACVM,KAAK,OACLG,aAAa,QACf,wBAAQP,KAAK,SAASF,UAAU,0BAAhC,qBCJOU,MAVf,SAAsBX,GAClB,OACI,yBAAQG,KAAK,SAASF,UAAU,iBAAiBW,eAAa,OAA9D,UACA,sBAAMX,UAAU,kBAAhB,kBACA,uCACA,sBAAMA,UAAU,kBAAhB,uBCKO,SAASY,EAAIb,GAE1B,OACE,cAAC,IAAD,UACE,gCACE,8BACE,6BAEE,6BACE,cAAC,IAAD,CAAMc,GAAG,SAAT,yBASN,cAAC,IAAD,UAEE,cAAC,IAAD,CAAOC,KAAK,IAAZ,SACE,cAACC,EAAD,CAAOC,KAAMjB,EAAMkB,iBAY/B,SAASF,EAAMhB,GACb,IAAMmB,EAAWnB,EAAMiB,KAAKG,KAAI,SAACH,GAAD,OAAU,cAAClB,EAAD,CAAMG,GAAIe,EAAKf,GAAIK,KAAMU,EAAKV,KAAMF,UAAWY,EAAKZ,WAAgBY,EAAKf,OAEnH,OACE,sBAAKD,UAAU,sBAAf,UACE,2CACA,cAAC,EAAD,IAEA,sBAAKA,UAAU,oCAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,oBAAIC,GAAG,eAAP,+BAGA,oBAEED,UAAU,uCACVoB,kBAAgB,eAHlB,SAIOF,OCjEb,IAYeG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCKdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpB,EAAD,CAAKK,MARI,CACX,CAAEhB,GAAI,SAAUG,WAAW,EAAME,KAAM,OACvC,CAAEL,GAAI,SAAUG,WAAW,EAAOE,KAAM,SACxC,CAAEL,GAAI,SAAUG,WAAW,EAAOE,KAAM,eAOxC2B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9a241313.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Todo(props) {\n    return (\n      <li className=\"todo stack-small\">\n        <div className=\"c-cb\">\n          <input id={props.id} type=\"checkbox\" defaultChecked={props.completed} />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n          <button type=\"button\" className=\"btn\">\n            Edit <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n          <button type=\"button\" className=\"btn btn__danger\">\n            Delete <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n      </li>\n    );\n}","import React from 'react'\n\nfunction Form(props) {\n    return (\n        <form>\n        <h2 className=\"label-wrapper\">\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n            What needs to be done?\n          </label>\n        </h2>\n        <input\n          input=\"text\"\n          id=\"new-todo-input\"\n          className=\"input input__lg\"\n          name=\"text\"\n          autoComplete=\"off\" />\n        <button type=\"submit\" className=\"btn btn__primary btn_lg\">\n          Add\n        </button>\n      </form>\n    )\n}\n\nexport default Form;","import React from 'react'\n\nfunction FilterButton(props) {\n    return (\n        <button type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"true\">\n        <span className=\"visually-hidden\">Show</span>\n        <span>all</span>\n        <span className=\"visually-hidden\">tasks</span>\n      </button>\n    )\n}\n\nexport default FilterButton;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Todo from './components/Todo'\nimport Form from './components/Form'\nimport FilterButton from './components/FilterButton'\n\nexport default function App(props) {\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n         \n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n        \n            \n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n       \n          <Route path=\"/\">\n            <About task={props.tasks} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home() {\n  return <h2>Home</h2>;\n}\n\nfunction About(props) {\n  const taskList = props.task.map((task) => <Todo id={task.id} name={task.name} completed={task.completed} key={task.id}/>)\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form />\n    \n      <div className=\"filters btn-group stack-exception\">\n        <FilterButton />\n        <FilterButton />\n        <FilterButton />\n      </div>\n      <h2 id=\"list-heading\">\n        3 tasks remaining\n      </h2>\n      <ul\n        // role=\"list\"\n        className=\"todo-list stack-large stack-exchange\"\n        aria-labelledby=\"list-heading\" >\n            {taskList}\n        </ul>\n    </div>\n    \n  );\n}\n\nfunction Users() {\n  return <h2>Users</h2>;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst DATA = [\n  { id: \"todo-0\", completed: true, name: \"Eat\"},\n  { id: \"todo-1\", completed: false, name: \"Sleep\"},\n  { id: \"todo-2\", completed: false, name: \"Repeat\"},\n]\n\nReactDOM.render(\n  <React.StrictMode>\n    <App tasks={DATA}/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}