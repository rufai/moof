[{"/Users/MobileDev/Documents/codes/TodoMatic/src/index.js":"1","/Users/MobileDev/Documents/codes/TodoMatic/src/reportWebVitals.js":"2","/Users/MobileDev/Documents/codes/TodoMatic/src/App.js":"3","/Users/MobileDev/Documents/codes/TodoMatic/src/components/Todo.js":"4","/Users/MobileDev/Documents/codes/TodoMatic/src/components/Form.js":"5","/Users/MobileDev/Documents/codes/TodoMatic/src/components/FilterButton.js":"6","/Users/MobileDev/Documents/codes/TodoMatic/src/components/InfiniteScrolling/index.js":"7","/Users/MobileDev/Documents/codes/TodoMatic/src/components/Dashboard/index.js":"8","/Users/MobileDev/Documents/codes/TodoMatic/src/components/tabs/Tabs/index.js":"9","/Users/MobileDev/Documents/codes/TodoMatic/src/components/Dashboard/Modal/index.js":"10","/Users/MobileDev/Documents/codes/TodoMatic/src/components/tabs/index.js":"11"},{"size":684,"mtime":1611420720210,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1609400356446,"results":"14","hashOfConfig":"13"},{"size":582,"mtime":1615289774032,"results":"15","hashOfConfig":"13"},{"size":2306,"mtime":1615288908962,"results":"16","hashOfConfig":"17"},{"size":1075,"mtime":1615288908655,"results":"18","hashOfConfig":"17"},{"size":385,"mtime":1615288908605,"results":"19","hashOfConfig":"17"},{"size":3610,"mtime":1615288908707,"results":"20","hashOfConfig":"17"},{"size":622,"mtime":1615288908339,"results":"21","hashOfConfig":"17"},{"size":559,"mtime":1615289765664,"results":"22","hashOfConfig":"13"},{"size":520,"mtime":1615288908307,"results":"23","hashOfConfig":"17"},{"size":1408,"mtime":1615289769840,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6oovnv",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},"1elgxbo",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/MobileDev/Documents/codes/TodoMatic/src/index.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/reportWebVitals.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/App.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/components/Todo.js",[],["49","50"],"/Users/MobileDev/Documents/codes/TodoMatic/src/components/Form.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/components/FilterButton.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/components/InfiniteScrolling/index.js",["51"],"import React, { Component, Fragment } from \"react\";\nimport { render } from \"react-dom\";\nimport request from \"superagent\";\nimport debounce from \"lodash.debounce\";\n\nclass InfiniteUsers extends Component {\n  constructor(props) {\n    super(props);\n\n    // Sets up our initial state\n    this.state = {\n      error: false,\n      hasMore: true,\n      isLoading: false,\n      users: [],\n    };\n\n    // Binds our scroll event handler\n    window.onscroll = debounce(() => {\n      const {\n        loadUsers,\n        state: {\n          error,\n          isLoading,\n          hasMore,\n        },\n      } = this;\n\n      // Bails early if:\n      // * there's an error\n      // * it's already loading\n      // * there's nothing left to load\n      if (error || isLoading || !hasMore) return;\n\n      // Checks that the page has scrolled to the bottom\n      if (\n        window.innerHeight + document.documentElement.scrollTop\n        === document.documentElement.offsetHeight\n      ) {\n        loadUsers();\n      }\n    }, 100);\n  }\n\n  componentWillMount() {\n    // Loads some users on initial load\n    this.loadUsers();\n  }\n\n  loadUsers = () => {\n    this.setState({ isLoading: true }, () => {\n      request\n        .get('https://randomuser.me/api/?results=10')\n        .then((results) => {\n          // Creates a massaged array of user data\n          const nextUsers = results.body.results.map(user => ({\n            email: user.email,\n            name: Object.values(user.name).join(' '),\n            photo: user.picture.medium,\n            username: user.login.username,\n            uuid: user.login.uuid,\n          }));\n\n          // Merges the next users into our existing users\n          this.setState({\n            // Note: Depending on the API you're using, this value may\n            // be returned as part of the payload to indicate that there\n            // is no additional data to be loaded\n            hasMore: (this.state.users.length < 100),\n            isLoading: false,\n            users: [\n              ...this.state.users,\n              ...nextUsers,\n            ],\n          });\n        })\n        .catch((err) => {\n          this.setState({\n            error: err.message,\n            isLoading: false,\n           });\n        })\n    });\n  }\n\n  render() {\n    const {\n      error,\n      hasMore,\n      isLoading,\n      users,\n    } = this.state;\n\n    return (\n      <div>\n        <h1>Infinite Users!</h1>\n        <p>Scroll down to load more!!</p>\n        {users.map(user => (\n          <Fragment key={user.username}>\n            <hr />\n            <div style={{ display: 'flex' }}>\n              <img\n                alt={user.username}\n                src={user.photo}\n                style={{\n                  borderRadius: '50%',\n                  height: 72,\n                  marginRight: 20,\n                  width: 72,\n                }}\n              />\n              <div>\n                <h2 style={{ marginTop: 0 }}>\n                  @{user.username}\n                </h2>\n                <p>Name: {user.name}</p>\n                <p>Email: {user.email}</p>\n              </div>\n            </div>\n          </Fragment>\n        ))}\n        <hr />\n        {error &&\n          <div style={{ color: '#900' }}>\n            {error}\n          </div>\n        }\n        {isLoading &&\n          <div>Loading...</div>\n        }\n        {!hasMore &&\n          <div>You did it! You reached the end!</div>\n        }\n      </div>\n    );\n  }\n}\n\n// const container = document.createElement(\"div\");\n// document.body.appendChild(container);\n// render(<InfiniteUsers />, container);\n\nexport default InfiniteUsers;","/Users/MobileDev/Documents/codes/TodoMatic/src/components/Dashboard/index.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/components/tabs/Tabs/index.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/components/Dashboard/Modal/index.js",[],"/Users/MobileDev/Documents/codes/TodoMatic/src/components/tabs/index.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]